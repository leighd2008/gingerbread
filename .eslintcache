[{"/home/leighd2008/gingerbread/src/components/uploadFiles/uploadFiles.jsx":"1","/home/leighd2008/gingerbread/src/redux/root-reducer.js":"2","/home/leighd2008/gingerbread/src/index.js":"3","/home/leighd2008/gingerbread/src/serviceWorker.js":"4","/home/leighd2008/gingerbread/src/redux/store.js":"5","/home/leighd2008/gingerbread/src/firebase/firebase.utils.js":"6","/home/leighd2008/gingerbread/src/redux/pictures/pictures.types.js":"7","/home/leighd2008/gingerbread/src/components/form-input/form-input.jsx":"8","/home/leighd2008/gingerbread/src/App.js":"9","/home/leighd2008/gingerbread/src/redux/pictures/pictures.selectors.js":"10","/home/leighd2008/gingerbread/src/components/carousel/carousel.jsx":"11","/home/leighd2008/gingerbread/src/pages/homePage/homePage.jsx":"12","/home/leighd2008/gingerbread/src/redux/pictures/pictures.actions.js":"13","/home/leighd2008/gingerbread/src/redux/pictures/pictures.reducer.js":"14","/home/leighd2008/gingerbread/src/components/imageSlide/imageSlide.jsx":"15","/home/leighd2008/gingerbread/src/components/with-spinner/with-spinner.jsx":"16","/home/leighd2008/gingerbread/src/components/with-spinner/with-spinner.styles.jsx":"17","/home/leighd2008/gingerbread/src/components/arrow/arrow.jsx":"18"},{"size":2523,"mtime":1607267397585,"results":"19","hashOfConfig":"20"},{"size":407,"mtime":1607007787903,"results":"21","hashOfConfig":"20"},{"size":607,"mtime":1607009789733,"results":"22","hashOfConfig":"20"},{"size":4965,"mtime":1607009761177,"results":"23","hashOfConfig":"20"},{"size":362,"mtime":1607009608351,"results":"24","hashOfConfig":"20"},{"size":1188,"mtime":1607010105165,"results":"25","hashOfConfig":"20"},{"size":107,"mtime":1607007053472,"results":"26","hashOfConfig":"20"},{"size":446,"mtime":1606925501379,"results":"27","hashOfConfig":"20"},{"size":2211,"mtime":1607112530393,"results":"28","hashOfConfig":"20"},{"size":525,"mtime":1607261336473,"results":"29","hashOfConfig":"20"},{"size":2673,"mtime":1608134499012,"results":"30","hashOfConfig":"20"},{"size":2019,"mtime":1608131426725,"results":"31","hashOfConfig":"20"},{"size":173,"mtime":1607007538611,"results":"32","hashOfConfig":"20"},{"size":377,"mtime":1607261324156,"results":"33","hashOfConfig":"20"},{"size":357,"mtime":1607186549577,"results":"34","hashOfConfig":"20"},{"size":358,"mtime":1607111708342,"results":"35","hashOfConfig":"20"},{"size":647,"mtime":1607111708354,"results":"36","hashOfConfig":"20"},{"size":182,"mtime":1608134750227,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"d5eu7u",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leighd2008/gingerbread/src/components/uploadFiles/uploadFiles.jsx",["84"],"import React, { useState, useRef } from 'react';\nimport { storage } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCategoryData } from \"../../redux/pictures/pictures.selectors\";\nimport FormInput from '../form-input/form-input'\n\nimport \"./uploadFiles.scss\";\n\nconst UploadFiles = ({categoryData, pictureIndex, category}) => {\n  const [imageAsFile, setImageAsFile] = useState(null);\n  const [imageAsUrl, setImageAsUrl] = useState(\"\");\n  const [names, setNames] = useState(\"\");\n  const imageInputRef = useRef();\n\n  const handleImageAsFile = (e) => {\n    setImageAsFile(e.target.files[0]);\n  }\n\n  const handleChange = event => {\n    let { value } = event.target;\n    setNames(value);\n  };\n\n  const updateCategoryData = (imageAsUrl) => {\n    const images = categoryData[category].images;\n    console.log(images)\n    console.log(pictureIndex)\n    const categoryId = categoryData[category].id;\n    images[pictureIndex] = ({'imgUrl':imageAsUrl, \"names\":names});\n    firestore.collection('pictures').doc(categoryId).update({\n      images: images,\n    })\n    setNames(\"\");\n    imageInputRef.current.value = \"\";\n  }\n\n  const handleFireBaseUpload = (e) => {\n    e.preventDefault()\n    const uploadTask = storage.ref(`/${category}/${imageAsFile.name}`).put(imageAsFile);\n   \n    uploadTask.on('state_changed',\n      () => {\n        storage\n          .ref(`${category}`)\n          .child(imageAsFile.name)\n          .getDownloadURL()\n          .then((imageAsUrl) => {\n            setImageAsFile(null);\n            setImageAsUrl(imageAsUrl)\n            updateCategoryData(imageAsUrl)\n          })\n      });\n    \n  }\n\n\n  return (\n    <div className=\"uploadFiles\">\n      <form className='upload' onSubmit={handleFireBaseUpload}>\n        <div className='fileInput'>\n          <input\n            type=\"file\" \n            onChange={handleImageAsFile}\n            ref={imageInputRef}\n          />\n          <button className='uploadFirebase' disabled={!imageAsFile}>Upload Photo </button>\n        </div>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={names}\n          onChange={handleChange}\n          label=\"Who is in This Picture?\"\n          required\n        />\n      </form>\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  categoryData: selectCategoryData\n})\n\nexport default connect(mapStateToProps)(UploadFiles);\n",["85","86"],"/home/leighd2008/gingerbread/src/redux/root-reducer.js",[],["87","88"],"/home/leighd2008/gingerbread/src/index.js",[],["89","90"],"/home/leighd2008/gingerbread/src/serviceWorker.js",[],["91","92"],"/home/leighd2008/gingerbread/src/redux/store.js",[],["93","94"],"/home/leighd2008/gingerbread/src/firebase/firebase.utils.js",[],["95","96"],"/home/leighd2008/gingerbread/src/redux/pictures/pictures.types.js",[],"/home/leighd2008/gingerbread/src/components/form-input/form-input.jsx",[],"/home/leighd2008/gingerbread/src/App.js",["97"],"import React, { Component } from 'react';\nimport { firestore, convertCollectionsSnapshotToMap, database } from './firebase/firebase.utils';\nimport { updatePictures } from \"./redux/pictures/pictures.actions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"./components/with-spinner/with-spinner\";\n\nimport HomePage from './pages/homePage/homePage';\nimport './App.css';\n\nconst HomePageWithSpinner = WithSpinner(HomePage);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // progressPics: [],\n      // finalPics: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { updatePictures } = this.props;\n    const collectionRef1 = firestore.collection(\"pictures\");\n\n\n    this.unsubscribeFromSnapshot = collectionRef1.onSnapshot(\n      async (snapshot) => {\n        const picturesMap = convertCollectionsSnapshotToMap(snapshot);\n        updatePictures(picturesMap);\n        this.setState({ loading: false });\n      }\n    );\n\n    // let progressPicRef = database.ref('progressPics').orderByKey();\n    // progressPicRef.on('child_added', snapshot => {\n    //   let progressPic = { text: snapshot.val(), id: snapshot.key };\n    //   this.setState({ progressPics: [progressPic].concat(this.state.progressPics) });\n    // })\n  }\n\n  // addMessage(e) {\n  //   e.preventDefault();\n  //   database.ref('progressPics').push(this.inputEl.value);\n  //   this.inputEl.value = '';\n  // }\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* <form onSubmit={this.addMessage.bind(this)}>\n          <input type=\"text\" ref={el => this.inputEl = el} />\n          <input type=\"submit\" />\n          <ul>\n            {\n              this.state.progressPics.map(progressPic =>\n                <li key={progressPic.id}>{progressPic.text}</li>)\n            }\n          </ul>\n        </form> */}\n        <header className=\"App-header\">\n          <HomePageWithSpinner isLoading={loading}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePictures: (picturesMap) => dispatch(updatePictures(picturesMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n\n","/home/leighd2008/gingerbread/src/redux/pictures/pictures.selectors.js",[],"/home/leighd2008/gingerbread/src/components/carousel/carousel.jsx",[],"/home/leighd2008/gingerbread/src/pages/homePage/homePage.jsx",[],"/home/leighd2008/gingerbread/src/redux/pictures/pictures.actions.js",[],["98","99"],"/home/leighd2008/gingerbread/src/redux/pictures/pictures.reducer.js",[],"/home/leighd2008/gingerbread/src/components/imageSlide/imageSlide.jsx",[],["100","101"],"/home/leighd2008/gingerbread/src/components/with-spinner/with-spinner.jsx",[],"/home/leighd2008/gingerbread/src/components/with-spinner/with-spinner.styles.jsx",[],"/home/leighd2008/gingerbread/src/components/arrow/arrow.jsx",[],{"ruleId":"102","severity":1,"message":"103","line":13,"column":10,"nodeType":"104","messageId":"105","endLine":13,"endColumn":20},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"106","replacedBy":"112"},{"ruleId":"108","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"108","replacedBy":"117"},{"ruleId":"106","replacedBy":"118"},{"ruleId":"108","replacedBy":"119"},{"ruleId":"102","severity":1,"message":"120","line":2,"column":54,"nodeType":"104","messageId":"105","endLine":2,"endColumn":62},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","replacedBy":"122"},{"ruleId":"106","replacedBy":"123"},{"ruleId":"108","replacedBy":"124"},"no-unused-vars","'imageAsUrl' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],["125"],["126"],["125"],["126"],["125"],["126"],["125"],["126"],"'database' is defined but never used.",["125"],["126"],["125"],["126"],"no-global-assign","no-unsafe-negation"]